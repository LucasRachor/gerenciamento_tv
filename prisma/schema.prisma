generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id            String    @id @default(cuid())
  nomeDeUsuario String    @unique
  nomeCompleto  String
  email         String    @unique
  senha         String
  codigoSenha   String    @default("")
  pagamento     Boolean   @default(false)
  role          Role      @default(user)
  criadoEm      DateTime  @default(now())
  atualizadoEm  DateTime?
  Cliente       Cliente[]

  @@map("usuarios")
}

model Tv {
  id           String       @id @default(cuid())
  nome         String       @unique
  descricao    String
  clientes_tvs Cliente_Tv[]
  pagamento    Pagamento[]

  @@map("tvs")
}

model Cliente {
  id              String       @id @default(cuid())
  nomeCompleto    String
  email           String       @unique
  telefone        String       @unique
  genero          String
  statusPagamento Boolean      @default(false)
  usuario         Usuario      @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  usuarioId       String
  endereco        Endereco?
  clientes_tvs    Cliente_Tv[]
  pagamento       Pagamento[]

  @@map("clientes")
}

model Cliente_Tv {
  id        String  @id @default(cuid())
  cliente   Cliente @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  clienteId String
  tv        Tv      @relation(fields: [tvId], references: [id], onDelete: Cascade)
  tvId      String

  @@unique([clienteId, tvId])
  @@map("clientes_tvs")
}

model Endereco {
  id        String  @id @default(cuid())
  cep       String
  rua       String
  bairro    String
  cidade    String
  estado    String
  cliente   Cliente @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  clienteId String  @unique @default("")

  @@map("enderecos")
}

model Pagamento {
  id            String   @id @default(cuid())
  dataPagamento DateTime @default(now())
  validoAte     DateTime
  valor         Float
  cliente       Cliente  @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  clienteId     String
  tv            Tv       @relation(fields: [tvId], references: [id], onDelete: Cascade)
  tvId          String

  @@map("pagamentos")
}

enum Role {
  user
  admin
}
